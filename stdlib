.data
	s1: .byte 0:7 
	s2: .byte 0:8
.text

ord:
	lw $t0, ($a0)
	beq $t0, 0, empty_case
	lbu $v0, 4($a0)
	j end_empty_case
	empty_case:	
		li $v0, -1
	end_empty_case:
	jr $ra
	
print:
	sub $sp, $sp, 4
	sw $ra, 4($sp)
	lw $a0, 4($a0)
	lw $v0, 4
	syscall
	lw $ra, 4($sp)
	add $sp, $sp, 4
	jr $ra

size:
	lw $v0, ($a0)
	jr $ra

concat:
	sub $sp, $sp, 4
	sw $ra, 4($sp)
	lw $s0, ($a0)
	lw $s1, ($a1)
	add $s2, $s0, $s1 #length of concatenated
	add $a0, $s2, 5 #number of bytes of concatenated string, for malloc purposes
	li $v0, 9
	syscall 
	sw $s2, ($v0) #s2 holds length of concatenated str
	la $t0, 4($v0) #address in new string
	la $t1, 4($s0) #address in s1
	while_s1:
		lbu $t2, ($t1) #gets the current character in s1
		beq $t2, 0, end_while_s1
		sb $t2, ($t0)
		add $t0, $t0, 1
		add $t1, $t1, 1
		j while_s1
	end_while_s1:
		la $t1, 4($s1)
	while_s2:
		lbu $t2, ($t1) #gets the current character in s1
		beq $t2, 0, end_while_s2
		sb $t2, ($t0)
		add $t0, $t0, 1
		add $t1, $t1, 1
		j while_s1
	end_while_s2:
	li $t3, 0
	sb $t3, ($t0)
	lw $ra, 4($sp)
	add $sp, $sp, 4
	jr $ra

main:
	la $t0, s1
	li $t1, 2
	sw $t1, ($t0)
	
	72 73 72 69 86
